
@inject HttpClient http;
@page "/Workers/Delete/{id:int}"
@inject IToastService toastService
@inject NavigationManager nav
@if (worker is null)
{
    <div>Loading..</div>
}
else
{
    <div class="row">
        <div class="col-12">
            <h3>Are you sure to delete?</h3>
                <div class="form-group row mb-1">
                    <label for="@worker.WorkerName" class="col-form-label col-form-label-sm col-2 text-end">Name</label>
                    <div class="col-4">
                    @worker.WorkerName
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="@worker.Gender" class="col-form-label col-form-label-sm col-2 text-end">Gender</label>
                    <div class="col-4">
                      @worker.Gender
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="@worker.Phone" class="col-form-label col-form-label-sm col-2 text-end">Phone</label>
                    <div class="col-4">
                    @worker.Phone
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="@worker.Payrate" class="col-form-label col-form-label-sm col-2 text-end">Payrate</label>
                    <div class="col-4">
                    @worker.Payrate
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="@worker.Picture" class="col-form-label col-form-label-sm col-2 text-end">Name</label>
                    <div class="col-4">
                        <img src="Uploads/@worker.Picture" style="width: 100px" class="img-thumbnail" />
                    </div>
                </div>
                <div class="form-group row mb-1">

                    <div class="col-4 offset-2">
                        <button @onclick=@DeleteIt type="button" class="btn btn-danger btn-sm">Confirm Delete</button>
                    </div>
                </div>
        </div>
    </div>
}
@code {
    [Parameter]
    public int id { get; set; }
    WorkerEdit worker = null!;

    protected override async Task OnInitializedAsync()
    {

        //this.StateHasChanged();
        var data = await http.GetFromJsonAsync<WorkerEdit>($"api/Workers/{id}");
        if (data is not null)
        {
            worker = data;
        }
    }
    private async Task DeleteIt()
    {
        var response = await this.http.DeleteAsync($"api/Workers/{id}");
        if (response.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Data deleted successsfully", "Success");
            nav.NavigateTo("/Workers/List");
        }
    }
}
